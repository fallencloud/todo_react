{"version":3,"sources":["components/Nav.js","context.js","components/ToDo.js","components/Tasks.js","components/AddTask.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","branding","react_default","a","createElement","className","href","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","tasks","filter","task","id","payload","concat","toConsumableArray","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","desc","dispatch","setState","inherits","createClass","key","value","children","Component","Consumer","ToDo","isComplete","onDeleteClick","_this2","_this$props$task","onClick","bind","Tasks","Fragment","map","components_ToDo","AddTask","onChange","e","defineProperty","target","name","onSubmit","preventDefault","uuid","placeholder","App","context_Provider","components_Nav","components_AddTask","components_Tasks","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iOAGMA,EAAM,SAAAC,GAAS,IACXC,EAAaD,EAAbC,SACR,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAA2BC,KAAK,KAC1CL,OAQbF,EAAIQ,aAAe,CACjBN,SAAU,UAOGF,uBCvBTS,EAAUC,IAAMC,gBAGhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,cACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,MAAOL,EAAMK,MAAMC,OAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAOP,EAAOQ,YAEzD,IAAK,WACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,MAAK,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,UAErC,QACE,OAAOL,IAMAY,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAZ,OAAAa,EAAA,EAAAb,CAAAc,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAZ,OAAAqB,EAAA,EAAArB,CAAAc,MAAAH,EAAAX,OAAAsB,EAAA,EAAAtB,CAAAS,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAP,OAAAW,MAEErB,MAAQ,CACNK,MAAO,CACL,CAAEG,GAAI,EAAGoB,KAAM,iBACf,CAAEpB,GAAI,EAAGoB,KAAM,gBACf,CAAEpB,GAAI,EAAGoB,KAAM,0BAEjBC,SAAU,SAAA5B,GACRc,EAAKe,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAT5Cc,EAAA,OAAAZ,OAAA4B,EAAA,EAAA5B,CAAAS,EAAAC,GAAAV,OAAA6B,EAAA,EAAA7B,CAAAS,EAAA,EAAAqB,IAAA,SAAAC,MAAA,WAcI,OACE5C,EAAAC,EAAAC,cAACI,EAAQgB,SAAT,CAAkBsB,MAAOjB,KAAKjB,OAC3BiB,KAAK7B,MAAM+C,cAhBpBvB,EAAA,CAA8BwB,aAsBjBC,EAAWzC,EAAQyC,SCWjBC,6MArDbtC,MAAQ,CACNuC,YAAY,KAEdC,cAAgB,SAAChC,EAAIqB,GACnBA,EAAS,CAAE3B,KAAM,cAAeO,QAASD,6EAGlC,IAAAiC,EAAAxB,KAAAyB,EACczB,KAAK7B,MAAMmB,KAAxBC,EADDkC,EACClC,GAAIoB,EADLc,EACKd,KACJW,EAAetB,KAAKjB,MAApBuC,WACR,OACEjD,EAAAC,EAAAC,cAAC6C,EAAD,KACG,SAAAH,GACC,OACE5C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,4BACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gDACbH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SACEU,KAAK,WACLgC,MAAM,GACNS,QAAS,WACPF,EAAKX,SAAS,CAAES,YAAaE,EAAKzC,MAAMuC,kBAKhDjD,EAAAC,EAAAC,cAAA,OACEC,UAAS,qDAAAiB,OACP6B,EAAa,WAAa,OAG3BX,GAEHtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wDACbH,EAAAC,EAAAC,cAAA,KACEmD,QAASF,EAAKD,cAAcI,KAAKH,EAAMjC,EAAI0B,EAAML,UACjDpC,UAAU,sDAtCX2C,aCqBJS,mLAlBX,OACEvD,EAAAC,EAAAC,cAAC6C,EAAD,KACG,SAAAH,GAAS,IACA7B,EAAU6B,EAAV7B,MAER,OACEf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuD,SAAA,KACGzC,EAAM0C,IAAI,SAAAxC,GAAI,OACbjB,EAAAC,EAAAC,cAACwD,EAAD,CAAMf,IAAK1B,EAAKC,GAAID,KAAMA,gBAVtB6B,qCC8DLa,6MA9DbjD,MAAQ,CACNO,KAAM,MAGR2C,SAAW,SAAAC,GACTpC,EAAKe,SAAL3B,OAAAiD,EAAA,EAAAjD,CAAA,GAAiBgD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOnB,WAG5CqB,SAAW,SAAC1B,EAAUsB,GACpBA,EAAEK,iBADwB,IAElBjD,EAASQ,EAAKf,MAAdO,KAQRsB,EAAS,CAAE3B,KAAM,WAAYO,QALb,CACdD,GAAIiD,MACJ7B,KAAMrB,KAMRQ,EAAKe,SAAS,CACZvB,KAAM,8EAID,IAAAkC,EAAAxB,KACCV,EAASU,KAAKjB,MAAdO,KACR,OACEjB,EAAAC,EAAAC,cAAC6C,EAAD,KACG,SAAAH,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,QAAM+D,SAAUd,EAAKc,SAASX,KAAKH,EAAMZ,IACvCvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACbH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SACEU,KAAK,OACLoD,KAAK,OACLI,YAAY,WACZjE,UAAU,eACVyC,MAAO3B,EACP2C,SAAUT,EAAKS,aAIrB5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAlB,oBAnDE2C,aCgCPuB,gMAvBX,OACErE,EAAAC,EAAAC,cAACoE,EAAD,KACEtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACqE,EAAD,CAAKxE,SAAS,cACdC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACsE,EAAD,OAEFxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,4BACZH,EAAAC,EAAAC,cAACuE,EAAD,mBAdA3B,cCCE4B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOhF,EAAAC,EAAAC,cAAC+E,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6bb99646.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Nav = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className='navbar navbar-inverse navbar-fixed-top'>\r\n      <div className='container'>\r\n        <div className='navbar-header m-auto'>\r\n          <a className='navbar-brand text-center' href='/'>\r\n            {branding}\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNav.defaultProps = {\r\n  branding: 'My App'\r\n};\r\n\r\nNav.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Nav;\r\n","import React, { Component } from 'react';\r\n\r\n//initialize context\r\nconst Context = React.createContext();\r\n\r\n//create reducer\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_TASK':\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter(task => task.id !== action.payload)\r\n      };\r\n    case 'ADD_TASK':\r\n      return {\r\n        ...state,\r\n        tasks: [action.payload, ...state.tasks]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//create provider\r\n//provides context\r\nexport class Provider extends Component {\r\n  //create state\r\n  state = {\r\n    tasks: [\r\n      { id: 1, desc: 'Go To Dentist' },\r\n      { id: 2, desc: 'Do Gardening' },\r\n      { id: 3, desc: 'Renew Library Account' }\r\n    ],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../context';\r\n\r\nclass ToDo extends Component {\r\n  state = {\r\n    isComplete: false\r\n  };\r\n  onDeleteClick = (id, dispatch) => {\r\n    dispatch({ type: 'DELETE_TASK', payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { id, desc } = this.props.task;\r\n    const { isComplete } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          return (\r\n            <li className='list-group-item checkbox'>\r\n              <div className='row'>\r\n                <div className='col-md-1 col-xs-1 col-lg-1 col-sm-1 checkbox'>\r\n                  <label>\r\n                    <input\r\n                      type='checkbox'\r\n                      value=''\r\n                      onClick={() => {\r\n                        this.setState({ isComplete: !this.state.isComplete });\r\n                      }}\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <div\r\n                  className={`col-md-10 col-xs-10 col-lg-10 col-sm-10 task-text ${\r\n                    isComplete ? 'complete' : null\r\n                  }`}\r\n                >\r\n                  {desc}\r\n                </div>\r\n                <div className='col-md-1 col-xs-1 col-lg-1 col-sm-1 delete-icon-area'>\r\n                  <i\r\n                    onClick={this.onDeleteClick.bind(this, id, value.dispatch)}\r\n                    className='delete-icon glyphicon glyphicon-trash'\r\n                  />\r\n                </div>\r\n              </div>\r\n            </li>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nToDo.propTypes = {\r\n  task: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ToDo;\r\n","import React, { Component } from 'react';\r\nimport ToDo from './ToDo';\r\n//import consumer\r\nimport { Consumer } from '../context';\r\n\r\nclass Tasks extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { tasks } = value;\r\n\r\n          return (\r\n            <>\r\n              {tasks.map(task => (\r\n                <ToDo key={task.id} task={task} />\r\n              ))}\r\n            </>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tasks;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../context';\r\nimport uuid from 'uuid';\r\n\r\nclass AddTask extends Component {\r\n  state = {\r\n    task: ''\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { task } = this.state;\r\n\r\n    //get form value\r\n    const newTask = {\r\n      id: uuid(),\r\n      desc: task\r\n    };\r\n\r\n    dispatch({ type: 'ADD_TASK', payload: newTask });\r\n\r\n    //clear form\r\n    this.setState({\r\n      task: ''\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { task } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='row input-area'>\r\n              <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                <div className='row'>\r\n                  <div className='form-group col-md-9 col-md-offset-2'>\r\n                    <h2>Add Task</h2>\r\n                    <input\r\n                      type='text'\r\n                      name='task'\r\n                      placeholder='New Task'\r\n                      className='form-control'\r\n                      value={task}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className='row'>\r\n                  <div className='form-group col-md-1 col-md-offset-2'>\r\n                    <button className='btn btn-primary'>Add</button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","import React, { Component } from 'react';\nimport Nav from './components/Nav';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\n\n//allows for context\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <div className='App'>\n          <Nav branding='To Do App' />\n          <div className='container'>\n            <div className='content-area' />\n            <div className='row'>\n              <div className='col-8'>\n                <AddTask />\n              </div>\n              <div className='row'>\n                <ul className='col-md-9 col-md-offset-2'>\n                  <Tasks />\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}